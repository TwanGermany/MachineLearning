# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hHydRmXuQ0Ee8HH74fBnFqeW0QAYlsry
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.neighbors import KNeighborsRegressor
from sklearn.model_selection import GridSearchCV

filename = "kc_house_data.csv"
df = pd.read_csv(filename)
print(df.head(5))

print(df.shape)
names = list(df.columns)
print(names)
types= df.dtypes
print(types)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
for i in range(len(types)):
    if types[i] == 'object':
      le.fit_transform(df[names[i]])
      df[names[i]] = le.transform(df[names[i]])

data = df.values

print(data[:2])

X = data[:,:-1]
y = data[:,-1]
print(X.shape)
print(y.shape)

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
scaler.fit(X)
X_scaled = scaler.transform(X)
print(X_scaled[0])

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X_scaled,y,test_size = 0.3,random_state=42)

from sklearn.neighbors import KNeighborsClassifier
model = KNeighborsClassifier(n_neighbors=1)
model.fit(X_train,y_train)

y_pred = model.predict(X_test)
print(y_pred)
for i in range(len(y_pred)):
  print(y_pred[i],y_test[i])